------------- Complete SASS From Beginer To Advanced ----------

1. Introduction 
    SASS is a CSS preprocessor.
    SASS stands for syntactically awesome style sheet. 
    It is an extension to CSS. 
    Browser does not understand SASS, so it is translated to CSS. 
    In Short SASS is CSS with Super Powers. 

2. Why To Use SASS 
    It helps developer to reduce repetation of css.
    It helps to organize large stylesheets. 
    It makes it easy to share design within and across projects. 

3. Features of SASS
    Write Less Do More. 
    Cross Browser Compatability. 
    It has many amazing Features like variables , nesting, mixins, particals etc. which helps us to write and manage stylesheets quickly and easily. 

4. SASS Syntax and Difference Between SASS and SCSS . 
    SASS Supports 2 Different types of syntax: 
    1) Intended (SASS extension)
    2) SCSS     (SCSS extension)

    Difference Between normal css vs Intended (SASS) vs SCSS syntax 

    1) Normal Css Example 
        nav{
            background-color:red;
        }
        nav ul{
            display:flex;
            justify-content:space-between;
        }
        nav ul li{
            list-style:none;
        }
        nav ul li a{
            text-decoration:none;
            font-size:16px;
        }
        nav ul li a:hover{
            font-size:20px;
        }

    2) Intended (SASS) Example
        nav 
            background-color:red;

            ul 
                display:flex;
                justify-content:space-between;

                li
                    list-style:none;

                    a
                        text-decoration:none;
                        font-size:16px; 
                        &:hover
                            font-size:20px;
        
    3) SCSS extension Example 
        nav{
            background-color:red;
            ul{
                display:flex;
                justify-content:space-between;
                li{
                    list-style:none;
                    a{
                        text-decoration:none;
                        font-size:16px; 
                        &:hover{
                            font-size:20px;
                        }
                    } 
                }
            }
        }

        We will use SCSS extension in these tutorial.
        Bcoz Scss is most famous amongst them and it is easy to understand. 

5. SASS Setup And its Basics 
    We will use Vs code in these tutorial 
    let Install a extension in vs code 

        Live Sass Compiler

    live sass compiler is a extension which compile our .scss file and convert it in .css file. 

    create 2 files 
    1) index.html 
    2) style.scss 

    Now click on watch sass 

    when you click on watch sass it will automatically generates 2 files named as style.css and style.css.map 

    so which code you write in style.scss file so live sass compiler automatically convert this code in style.css file. 
    style.css.map file is help in mapping or converting style.scss file to style.css file 

    now add link tag in html file like 
    it is must to add .css file in link tag 

    <link rel="stylesheet" href="style.css">

    now we can write code in style.scss file

6) Variables 
    syntax to declare variables is 
    $varibleName = value;
    for example 
    $bg-color : red;
    $text-color : white;

    how to use variables inside elememt is -
    body{
        background-color : $bg-color;
        color : $text-color;
    }

7) SASS Nesting
    Nesting means- child element inside parents elememt 

    for example=> 
    <header>
        <nav>
            <ul> 
                <li> Home </li>
                <li> About </li>
            </ul>
        </nav>
    </header>

    header{
        position:fixed;
        top:0;
        right:0;
        width:100%;
        height:5rem;

        nav{

            ul{
                padding:1rem;

                li{
                    list-style:none;
                    color:white;
                    &:hover{
                        color:red;
                    }
                }
            }
        }
    }

8) Operators 
    Same like mathematical Operators like + , -, * , / etc 
    for example => 

    font-size :10px + 5;   //so it is 15px
    font-size :10px - 5;   //so it is 5px
    font-size :10px * 5;   //so it is 50px 
    font-size :10px / 5;   //so it is 2px

    margin-left :12rem + 2rem; 

    We cannot use Different units 
    for example 
    font-size :1rem + 10px ;
    //this is 2 Different unit rem and px so it gives error. 

9) SASS Maps
    map method can store more than one value in variable in key pair : 

    syntx 
    $variableName : ('key': value, 'key': value);

    for example=> 
    $fontSize : ('small-font': 1rem , 'medium-font':1.1rem);

    how to use=>
    p{
        font-size: map-get($map: $fontSize, $key: 'small-font');
    }
    h3{
        font-size: map-get($map: $fontSize, $key: 'medium-font');
    }

10) Ampersand ( & )
    It Represents parents child relation 
    It target Parent tag 
    for example 
    button{
        background:red;

        &:hover{
            background:blue;
        }
    }

11) SASS Mixins And Include 
    It is like functions in programming language 
    reusable bit of code. 

    for example => 
    @mixin flexBox {
        display:flex;
        align-items:center;
        justify-content:center;
    }

    .contanier{
        @include flexBox;
    }

    //also pass arguments in mixins 












  
